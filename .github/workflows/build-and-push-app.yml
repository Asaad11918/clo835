name: Build & Push App to ECR

on:
  push:
    branches: ["main","master"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
  ECR_REPO:   ${{ vars.ECR_REPO_APP || 'clo835-webapp' }}
  APP_DIR:    assignment_docker

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Resolve account + image URI
        id: resolve
        shell: bash
        run: |
          set -euo pipefail
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "account_id=$ACCOUNT_ID" >> $GITHUB_OUTPUT
          echo "image_uri=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}" >> $GITHUB_OUTPUT

      - name: Ensure ECR repository exists
        shell: bash
        run: |
          set -euo pipefail
          aws ecr describe-repositories --repository-names "${{ env.ECR_REPO }}" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "${{ env.ECR_REPO }}" >/dev/null

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push
        working-directory: ${{ env.APP_DIR }}
        shell: bash
        env:
          IMAGE_URI: ${{ steps.resolve.outputs.image_uri }}
        run: |
          set -euo pipefail
          GIT_SHA="${{ github.sha }}"
          TS="$(date +%Y%m%d%H%M%S)"

          # Build from app directory
          docker build -t "${ECR_REPO}:latest" -t "${ECR_REPO}:${GIT_SHA}" -t "${ECR_REPO}:${TS}" .

          # Tag to full ECR URI
          docker tag "${ECR_REPO}:latest"     "${IMAGE_URI}:latest"
          docker tag "${ECR_REPO}:${GIT_SHA}" "${IMAGE_URI}:${GIT_SHA}"
          docker tag "${ECR_REPO}:${TS}"      "${IMAGE_URI}:${TS}"

          # Push
          docker push "${IMAGE_URI}:latest"
          docker push "${IMAGE_URI}:${GIT_SHA}"
          docker push "${IMAGE_URI}:${TS}"

      - name: Who am I (audit)
        run: aws sts get-caller-identity

